
Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000ae  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005c6  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000005c6  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000030  00000000  00000000  000005f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000008c9  00000000  00000000  00000625  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005d1  00000000  00000000  00000eee  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000270  00000000  00000000  000014bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000000d4  00000000  00000000  00001730  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  00001804  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001de  00000000  00000000  000019b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000020  00000000  00000000  00001b91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  0000054e  0000054e  000005c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001bb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    0000006e  0000036e  0000036e  000003e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .text.__vector_1 0000008e  000002e0  000002e0  00000354  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.__vector_2 00000090  00000250  00000250  000002c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .bss.duty_cycle 00000004  00800060  00800060  000005c6  2**0
                  ALLOC
 17 .text.avrlibc.fplib 0000000e  000004e8  000004e8  0000055c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.avrlibc.fplib 000000ce  00000182  00000182  000001f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.avrlibc.fplib 0000000a  0000052c  0000052c  000005a0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.avrlibc.fplib 0000005e  000003dc  000003dc  00000450  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.avrlibc.fplib 00000048  0000043a  0000043a  000004ae  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.avrlibc.fplib 0000000c  00000520  00000520  00000594  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.avrlibc.fplib 00000006  00000548  00000548  000005bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.avrlibc.fplib 0000000e  000004f6  000004f6  0000056a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.avrlibc.fplib 0000000e  00000504  00000504  00000578  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.avrlibc.fplib 00000022  000004c6  000004c6  0000053a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.avrlibc.fplib 00000044  00000482  00000482  000004f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.avrlibc.fplib 0000000e  00000512  00000512  00000586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.avrlibc.fplib 0000000a  00000536  00000536  000005aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.avrlibc.fplib 00000008  00000540  00000540  000005b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.avrlibc.fplib 000000d4  000000ae  000000ae  00000122  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2d 00 	jmp	0x5a	; 0x5a <__ctors_end>
   4:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <__vector_1>
   8:	0c 94 28 01 	jmp	0x250	; 0x250 <__vector_2>
   c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  10:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  14:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  18:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  1c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  20:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  24:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  28:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  2c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  30:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  34:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  38:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  3c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  40:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  44:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  48:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  4c:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>
  50:	0c 94 a7 02 	jmp	0x54e	; 0x54e <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 64       	ori	r16, 0x40	; 64
  58:	80 00       	.word	0x0080	; ????

0000005a <__ctors_end>:
  5a:	11 24       	eor	r1, r1
  5c:	1f be       	out	0x3f, r1	; 63
  5e:	cf e5       	ldi	r28, 0x5F	; 95
  60:	d4 e0       	ldi	r29, 0x04	; 4
  62:	de bf       	out	0x3e, r29	; 62
  64:	cd bf       	out	0x3d, r28	; 61

00000066 <__do_copy_data>:
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f0 e0       	ldi	r31, 0x00	; 0
  6a:	40 e0       	ldi	r20, 0x00	; 0
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__do_clear_bss+0x8>
  6e:	b5 91       	lpm	r27, Z+
  70:	a5 91       	lpm	r26, Z+
  72:	35 91       	lpm	r19, Z+
  74:	25 91       	lpm	r18, Z+
  76:	05 91       	lpm	r16, Z+
  78:	07 fd       	sbrc	r16, 7
  7a:	0c c0       	rjmp	.+24     	; 0x94 <__do_clear_bss>
  7c:	95 91       	lpm	r25, Z+
  7e:	85 91       	lpm	r24, Z+
  80:	ef 01       	movw	r28, r30
  82:	f9 2f       	mov	r31, r25
  84:	e8 2f       	mov	r30, r24
  86:	05 90       	lpm	r0, Z+
  88:	0d 92       	st	X+, r0
  8a:	a2 17       	cp	r26, r18
  8c:	b3 07       	cpc	r27, r19
  8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0x20>
  90:	fe 01       	movw	r30, r28
  92:	04 c0       	rjmp	.+8      	; 0x9c <__do_clear_bss+0x8>

00000094 <__do_clear_bss>:
  94:	1d 92       	st	X+, r1
  96:	a2 17       	cp	r26, r18
  98:	b3 07       	cpc	r27, r19
  9a:	e1 f7       	brne	.-8      	; 0x94 <__do_clear_bss>
  9c:	e9 35       	cpi	r30, 0x59	; 89
  9e:	f4 07       	cpc	r31, r20
  a0:	31 f7       	brne	.-52     	; 0x6e <__do_copy_data+0x8>
  a2:	0e 94 b7 01 	call	0x36e	; 0x36e <main>
  a6:	0c 94 55 00 	jmp	0xaa	; 0xaa <_exit>

000000aa <_exit>:
  aa:	f8 94       	cli

000000ac <__stop_program>:
  ac:	ff cf       	rjmp	.-2      	; 0xac <__stop_program>

Disassembly of section .text:

0000054e <__bad_interrupt>:
 54e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000036e <main>:
volatile float duty_cycle =0;
const int toggleDirectionButton = 2;

int main(void)
{
	DDRA= 0x03;	// Setting first two pins of port A as output for controlling the driver
 36e:	83 e0       	ldi	r24, 0x03	; 3
 370:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x05;	// Enable Pull-up resistor for pin 2 and initiating direction 01 for the driver
 372:	85 e0       	ldi	r24, 0x05	; 5
 374:	8b bb       	out	0x1b, r24	; 27
	DDRB |= (1<<PINB3);	// Setting pin 3 of port b as output for PWM signal generated at OC0
 376:	87 b3       	in	r24, 0x17	; 23
 378:	88 60       	ori	r24, 0x08	; 8
 37a:	87 bb       	out	0x17, r24	; 23

	// TIMER0
	TCCR0=0b01110101;	//Configure Timer0 to run at Phase correct PWM
 37c:	85 e7       	ldi	r24, 0x75	; 117
 37e:	83 bf       	out	0x33, r24	; 51
	
	//EXTERNAL INTs
	PORTD=0b00001100;	// Enable Pull-up for INT 0 and INT 1
 380:	8c e0       	ldi	r24, 0x0C	; 12
 382:	82 bb       	out	0x12, r24	; 18
	MCUCR = 0b00001010; // INT 0 and INT 1 will be triggered when falling edge signal arrives
 384:	8a e0       	ldi	r24, 0x0A	; 10
 386:	85 bf       	out	0x35, r24	; 53
	GICR = 0b11000000;  // Enable INT 0 and INT 1
 388:	80 ec       	ldi	r24, 0xC0	; 192
 38a:	8b bf       	out	0x3b, r24	; 59
	sei();
 38c:	78 94       	sei
	
	
	while(1)
	{	
		
		if(get_bit(PINA,toggleDirectionButton) == 0)
 38e:	ca 99       	sbic	0x19, 2	; 25
 390:	0d c0       	rjmp	.+26     	; 0x3ac <main+0x3e>
		{
			PORTA ^= (1<<PINA0)|(1<<PINA1);
 392:	9b b3       	in	r25, 0x1b	; 27
 394:	83 e0       	ldi	r24, 0x03	; 3
 396:	89 27       	eor	r24, r25
 398:	8b bb       	out	0x1b, r24	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 39a:	2f e9       	ldi	r18, 0x9F	; 159
 39c:	86 e8       	ldi	r24, 0x86	; 134
 39e:	91 e0       	ldi	r25, 0x01	; 1
 3a0:	21 50       	subi	r18, 0x01	; 1
 3a2:	80 40       	sbci	r24, 0x00	; 0
 3a4:	90 40       	sbci	r25, 0x00	; 0
 3a6:	e1 f7       	brne	.-8      	; 0x3a0 <main+0x32>
 3a8:	00 c0       	rjmp	.+0      	; 0x3aa <main+0x3c>
 3aa:	00 00       	nop
			_delay_ms(500);
		}
		OCR0 = (uint8_t)(255* (1-duty_cycle));
 3ac:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 3b0:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 3b4:	40 91 62 00 	lds	r20, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 3b8:	50 91 63 00 	lds	r21, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	80 e8       	ldi	r24, 0x80	; 128
 3c2:	9f e3       	ldi	r25, 0x3F	; 63
 3c4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__subsf3>
 3c8:	20 e0       	ldi	r18, 0x00	; 0
 3ca:	30 e0       	ldi	r19, 0x00	; 0
 3cc:	4f e7       	ldi	r20, 0x7F	; 127
 3ce:	53 e4       	ldi	r21, 0x43	; 67
 3d0:	0e 94 a0 02 	call	0x540	; 0x540 <__mulsf3>
 3d4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fixunssfsi>
 3d8:	6c bf       	out	0x3c, r22	; 60
	}
 3da:	d9 cf       	rjmp	.-78     	; 0x38e <main+0x20>

Disassembly of section .text.__vector_1:

000002e0 <__vector_1>:

	return 0;
}
ISR(INT0_vect)
{
 2e0:	1f 92       	push	r1
 2e2:	0f 92       	push	r0
 2e4:	0f b6       	in	r0, 0x3f	; 63
 2e6:	0f 92       	push	r0
 2e8:	11 24       	eor	r1, r1
 2ea:	2f 93       	push	r18
 2ec:	3f 93       	push	r19
 2ee:	4f 93       	push	r20
 2f0:	5f 93       	push	r21
 2f2:	6f 93       	push	r22
 2f4:	7f 93       	push	r23
 2f6:	8f 93       	push	r24
 2f8:	9f 93       	push	r25
 2fa:	af 93       	push	r26
 2fc:	bf 93       	push	r27
 2fe:	ef 93       	push	r30
 300:	ff 93       	push	r31
	//Increase the speed by 10%
	if(duty_cycle>0)
 302:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 306:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 30a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 30e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 312:	20 e0       	ldi	r18, 0x00	; 0
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	a9 01       	movw	r20, r18
 318:	0e 94 9b 02 	call	0x536	; 0x536 <__gesf2>
 31c:	18 16       	cp	r1, r24
 31e:	b4 f4       	brge	.+44     	; 0x34c <__vector_1+0x6c>
		duty_cycle -=0.1;
 320:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 324:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 328:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 32c:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 330:	2d ec       	ldi	r18, 0xCD	; 205
 332:	3c ec       	ldi	r19, 0xCC	; 204
 334:	4c ec       	ldi	r20, 0xCC	; 204
 336:	5d e3       	ldi	r21, 0x3D	; 61
 338:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__subsf3>
 33c:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 340:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 344:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 348:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
}
 34c:	ff 91       	pop	r31
 34e:	ef 91       	pop	r30
 350:	bf 91       	pop	r27
 352:	af 91       	pop	r26
 354:	9f 91       	pop	r25
 356:	8f 91       	pop	r24
 358:	7f 91       	pop	r23
 35a:	6f 91       	pop	r22
 35c:	5f 91       	pop	r21
 35e:	4f 91       	pop	r20
 360:	3f 91       	pop	r19
 362:	2f 91       	pop	r18
 364:	0f 90       	pop	r0
 366:	0f be       	out	0x3f, r0	; 63
 368:	0f 90       	pop	r0
 36a:	1f 90       	pop	r1
 36c:	18 95       	reti

Disassembly of section .text.__vector_2:

00000250 <__vector_2>:
ISR(INT1_vect)
{
 250:	1f 92       	push	r1
 252:	0f 92       	push	r0
 254:	0f b6       	in	r0, 0x3f	; 63
 256:	0f 92       	push	r0
 258:	11 24       	eor	r1, r1
 25a:	2f 93       	push	r18
 25c:	3f 93       	push	r19
 25e:	4f 93       	push	r20
 260:	5f 93       	push	r21
 262:	6f 93       	push	r22
 264:	7f 93       	push	r23
 266:	8f 93       	push	r24
 268:	9f 93       	push	r25
 26a:	af 93       	push	r26
 26c:	bf 93       	push	r27
 26e:	ef 93       	push	r30
 270:	ff 93       	push	r31
	//Decrease the speed by 10%
	if(duty_cycle<1)
 272:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 276:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 27a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 27e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 282:	20 e0       	ldi	r18, 0x00	; 0
 284:	30 e0       	ldi	r19, 0x00	; 0
 286:	40 e8       	ldi	r20, 0x80	; 128
 288:	5f e3       	ldi	r21, 0x3F	; 63
 28a:	0e 94 96 02 	call	0x52c	; 0x52c <__cmpsf2>
 28e:	88 23       	and	r24, r24
 290:	b4 f4       	brge	.+44     	; 0x2be <__vector_2+0x6e>
		duty_cycle +=0.1;
 292:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 296:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 29a:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 29e:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 2a2:	2d ec       	ldi	r18, 0xCD	; 205
 2a4:	3c ec       	ldi	r19, 0xCC	; 204
 2a6:	4c ec       	ldi	r20, 0xCC	; 204
 2a8:	5d e3       	ldi	r21, 0x3D	; 61
 2aa:	0e 94 75 02 	call	0x4ea	; 0x4ea <__addsf3>
 2ae:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 2b2:	70 93 61 00 	sts	0x0061, r23	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 2b6:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 2ba:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
}
 2be:	ff 91       	pop	r31
 2c0:	ef 91       	pop	r30
 2c2:	bf 91       	pop	r27
 2c4:	af 91       	pop	r26
 2c6:	9f 91       	pop	r25
 2c8:	8f 91       	pop	r24
 2ca:	7f 91       	pop	r23
 2cc:	6f 91       	pop	r22
 2ce:	5f 91       	pop	r21
 2d0:	4f 91       	pop	r20
 2d2:	3f 91       	pop	r19
 2d4:	2f 91       	pop	r18
 2d6:	0f 90       	pop	r0
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

Disassembly of section .text.avrlibc.fplib:

000004e8 <__subsf3>:
 4e8:	50 58       	subi	r21, 0x80	; 128

000004ea <__addsf3>:
 4ea:	bb 27       	eor	r27, r27
 4ec:	aa 27       	eor	r26, r26
 4ee:	0e 94 c1 00 	call	0x182	; 0x182 <__addsf3x>
 4f2:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000182 <__addsf3x>:
 182:	11 c0       	rjmp	.+34     	; 0x1a6 <__addsf3x+0x24>
 184:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscA>
 188:	38 f0       	brcs	.+14     	; 0x198 <__addsf3x+0x16>
 18a:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscB>
 18e:	20 f0       	brcs	.+8      	; 0x198 <__addsf3x+0x16>
 190:	39 f4       	brne	.+14     	; 0x1a0 <__addsf3x+0x1e>
 192:	9f 3f       	cpi	r25, 0xFF	; 255
 194:	19 f4       	brne	.+6      	; 0x19c <__addsf3x+0x1a>
 196:	26 f4       	brtc	.+8      	; 0x1a0 <__addsf3x+0x1e>
 198:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
 19c:	0e f4       	brtc	.+2      	; 0x1a0 <__addsf3x+0x1e>
 19e:	e0 95       	com	r30
 1a0:	e7 fb       	bst	r30, 7
 1a2:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_inf>
 1a6:	e9 2f       	mov	r30, r25
 1a8:	0e 94 41 02 	call	0x482	; 0x482 <__fp_split3>
 1ac:	58 f3       	brcs	.-42     	; 0x184 <__addsf3x+0x2>
 1ae:	ba 17       	cp	r27, r26
 1b0:	62 07       	cpc	r22, r18
 1b2:	73 07       	cpc	r23, r19
 1b4:	84 07       	cpc	r24, r20
 1b6:	95 07       	cpc	r25, r21
 1b8:	20 f0       	brcs	.+8      	; 0x1c2 <__addsf3x+0x40>
 1ba:	79 f4       	brne	.+30     	; 0x1da <__addsf3x+0x58>
 1bc:	a6 f5       	brtc	.+104    	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
 1be:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_zero>
 1c2:	0e f4       	brtc	.+2      	; 0x1c6 <__addsf3x+0x44>
 1c4:	e0 95       	com	r30
 1c6:	0b 2e       	mov	r0, r27
 1c8:	ba 2f       	mov	r27, r26
 1ca:	a0 2d       	mov	r26, r0
 1cc:	0b 01       	movw	r0, r22
 1ce:	b9 01       	movw	r22, r18
 1d0:	90 01       	movw	r18, r0
 1d2:	0c 01       	movw	r0, r24
 1d4:	ca 01       	movw	r24, r20
 1d6:	a0 01       	movw	r20, r0
 1d8:	11 24       	eor	r1, r1
 1da:	ff 27       	eor	r31, r31
 1dc:	59 1b       	sub	r21, r25
 1de:	99 f0       	breq	.+38     	; 0x206 <__EEPROM_REGION_LENGTH__+0x6>
 1e0:	59 3f       	cpi	r21, 0xF9	; 249
 1e2:	50 f4       	brcc	.+20     	; 0x1f8 <__addsf3x+0x76>
 1e4:	50 3e       	cpi	r21, 0xE0	; 224
 1e6:	68 f1       	brcs	.+90     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 1e8:	1a 16       	cp	r1, r26
 1ea:	f0 40       	sbci	r31, 0x00	; 0
 1ec:	a2 2f       	mov	r26, r18
 1ee:	23 2f       	mov	r18, r19
 1f0:	34 2f       	mov	r19, r20
 1f2:	44 27       	eor	r20, r20
 1f4:	58 5f       	subi	r21, 0xF8	; 248
 1f6:	f3 cf       	rjmp	.-26     	; 0x1de <__addsf3x+0x5c>
 1f8:	46 95       	lsr	r20
 1fa:	37 95       	ror	r19
 1fc:	27 95       	ror	r18
 1fe:	a7 95       	ror	r26
 200:	f0 40       	sbci	r31, 0x00	; 0
 202:	53 95       	inc	r21
 204:	c9 f7       	brne	.-14     	; 0x1f8 <__addsf3x+0x76>
 206:	7e f4       	brtc	.+30     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
 208:	1f 16       	cp	r1, r31
 20a:	ba 0b       	sbc	r27, r26
 20c:	62 0b       	sbc	r22, r18
 20e:	73 0b       	sbc	r23, r19
 210:	84 0b       	sbc	r24, r20
 212:	ba f0       	brmi	.+46     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 214:	91 50       	subi	r25, 0x01	; 1
 216:	a1 f0       	breq	.+40     	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
 218:	ff 0f       	add	r31, r31
 21a:	bb 1f       	adc	r27, r27
 21c:	66 1f       	adc	r22, r22
 21e:	77 1f       	adc	r23, r23
 220:	88 1f       	adc	r24, r24
 222:	c2 f7       	brpl	.-16     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
 224:	0e c0       	rjmp	.+28     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 226:	ba 0f       	add	r27, r26
 228:	62 1f       	adc	r22, r18
 22a:	73 1f       	adc	r23, r19
 22c:	84 1f       	adc	r24, r20
 22e:	48 f4       	brcc	.+18     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
 230:	87 95       	ror	r24
 232:	77 95       	ror	r23
 234:	67 95       	ror	r22
 236:	b7 95       	ror	r27
 238:	f7 95       	ror	r31
 23a:	9e 3f       	cpi	r25, 0xFE	; 254
 23c:	08 f0       	brcs	.+2      	; 0x240 <__EEPROM_REGION_LENGTH__+0x40>
 23e:	b0 cf       	rjmp	.-160    	; 0x1a0 <__addsf3x+0x1e>
 240:	93 95       	inc	r25
 242:	88 0f       	add	r24, r24
 244:	08 f0       	brcs	.+2      	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
 246:	99 27       	eor	r25, r25
 248:	ee 0f       	add	r30, r30
 24a:	97 95       	ror	r25
 24c:	87 95       	ror	r24
 24e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000052c <__cmpsf2>:
 52c:	0e 94 1d 02 	call	0x43a	; 0x43a <__fp_cmp>
 530:	08 f4       	brcc	.+2      	; 0x534 <__cmpsf2+0x8>
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000003dc <__fixunssfsi>:
 3dc:	0e 94 49 02 	call	0x492	; 0x492 <__fp_splitA>
 3e0:	88 f0       	brcs	.+34     	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3e2:	9f 57       	subi	r25, 0x7F	; 127
 3e4:	98 f0       	brcs	.+38     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 3e6:	b9 2f       	mov	r27, r25
 3e8:	99 27       	eor	r25, r25
 3ea:	b7 51       	subi	r27, 0x17	; 23
 3ec:	b0 f0       	brcs	.+44     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 3ee:	e1 f0       	breq	.+56     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 3f0:	66 0f       	add	r22, r22
 3f2:	77 1f       	adc	r23, r23
 3f4:	88 1f       	adc	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	1a f0       	brmi	.+6      	; 0x400 <__DATA_REGION_LENGTH__>
 3fa:	ba 95       	dec	r27
 3fc:	c9 f7       	brne	.-14     	; 0x3f0 <__fixunssfsi+0x14>
 3fe:	14 c0       	rjmp	.+40     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 400:	b1 30       	cpi	r27, 0x01	; 1
 402:	91 f0       	breq	.+36     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 404:	0e 94 89 02 	call	0x512	; 0x512 <__fp_zero>
 408:	b1 e0       	ldi	r27, 0x01	; 1
 40a:	08 95       	ret
 40c:	0c 94 89 02 	jmp	0x512	; 0x512 <__fp_zero>
 410:	67 2f       	mov	r22, r23
 412:	78 2f       	mov	r23, r24
 414:	88 27       	eor	r24, r24
 416:	b8 5f       	subi	r27, 0xF8	; 248
 418:	39 f0       	breq	.+14     	; 0x428 <__DATA_REGION_LENGTH__+0x28>
 41a:	b9 3f       	cpi	r27, 0xF9	; 249
 41c:	cc f3       	brlt	.-14     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 41e:	86 95       	lsr	r24
 420:	77 95       	ror	r23
 422:	67 95       	ror	r22
 424:	b3 95       	inc	r27
 426:	d9 f7       	brne	.-10     	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
 428:	3e f4       	brtc	.+14     	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 42a:	90 95       	com	r25
 42c:	80 95       	com	r24
 42e:	70 95       	com	r23
 430:	61 95       	neg	r22
 432:	7f 4f       	sbci	r23, 0xFF	; 255
 434:	8f 4f       	sbci	r24, 0xFF	; 255
 436:	9f 4f       	sbci	r25, 0xFF	; 255
 438:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

0000043a <__fp_cmp>:
 43a:	99 0f       	add	r25, r25
 43c:	00 08       	sbc	r0, r0
 43e:	55 0f       	add	r21, r21
 440:	aa 0b       	sbc	r26, r26
 442:	e0 e8       	ldi	r30, 0x80	; 128
 444:	fe ef       	ldi	r31, 0xFE	; 254
 446:	16 16       	cp	r1, r22
 448:	17 06       	cpc	r1, r23
 44a:	e8 07       	cpc	r30, r24
 44c:	f9 07       	cpc	r31, r25
 44e:	c0 f0       	brcs	.+48     	; 0x480 <__stack+0x21>
 450:	12 16       	cp	r1, r18
 452:	13 06       	cpc	r1, r19
 454:	e4 07       	cpc	r30, r20
 456:	f5 07       	cpc	r31, r21
 458:	98 f0       	brcs	.+38     	; 0x480 <__stack+0x21>
 45a:	62 1b       	sub	r22, r18
 45c:	73 0b       	sbc	r23, r19
 45e:	84 0b       	sbc	r24, r20
 460:	95 0b       	sbc	r25, r21
 462:	39 f4       	brne	.+14     	; 0x472 <__stack+0x13>
 464:	0a 26       	eor	r0, r26
 466:	61 f0       	breq	.+24     	; 0x480 <__stack+0x21>
 468:	23 2b       	or	r18, r19
 46a:	24 2b       	or	r18, r20
 46c:	25 2b       	or	r18, r21
 46e:	21 f4       	brne	.+8      	; 0x478 <__stack+0x19>
 470:	08 95       	ret
 472:	0a 26       	eor	r0, r26
 474:	09 f4       	brne	.+2      	; 0x478 <__stack+0x19>
 476:	a1 40       	sbci	r26, 0x01	; 1
 478:	a6 95       	lsr	r26
 47a:	8f ef       	ldi	r24, 0xFF	; 255
 47c:	81 1d       	adc	r24, r1
 47e:	81 1d       	adc	r24, r1
 480:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000520 <__fp_inf>:
 520:	97 f9       	bld	r25, 7
 522:	9f 67       	ori	r25, 0x7F	; 127
 524:	80 e8       	ldi	r24, 0x80	; 128
 526:	70 e0       	ldi	r23, 0x00	; 0
 528:	60 e0       	ldi	r22, 0x00	; 0
 52a:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000548 <__fp_nan>:
 548:	9f ef       	ldi	r25, 0xFF	; 255
 54a:	80 ec       	ldi	r24, 0xC0	; 192
 54c:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000004f6 <__fp_pscA>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	16 16       	cp	r1, r22
 4fc:	17 06       	cpc	r1, r23
 4fe:	18 06       	cpc	r1, r24
 500:	09 06       	cpc	r0, r25
 502:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000504 <__fp_pscB>:
 504:	00 24       	eor	r0, r0
 506:	0a 94       	dec	r0
 508:	12 16       	cp	r1, r18
 50a:	13 06       	cpc	r1, r19
 50c:	14 06       	cpc	r1, r20
 50e:	05 06       	cpc	r0, r21
 510:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

000004c6 <__fp_round>:
 4c6:	09 2e       	mov	r0, r25
 4c8:	03 94       	inc	r0
 4ca:	00 0c       	add	r0, r0
 4cc:	11 f4       	brne	.+4      	; 0x4d2 <__fp_round+0xc>
 4ce:	88 23       	and	r24, r24
 4d0:	52 f0       	brmi	.+20     	; 0x4e6 <__fp_round+0x20>
 4d2:	bb 0f       	add	r27, r27
 4d4:	40 f4       	brcc	.+16     	; 0x4e6 <__fp_round+0x20>
 4d6:	bf 2b       	or	r27, r31
 4d8:	11 f4       	brne	.+4      	; 0x4de <__fp_round+0x18>
 4da:	60 ff       	sbrs	r22, 0
 4dc:	04 c0       	rjmp	.+8      	; 0x4e6 <__fp_round+0x20>
 4de:	6f 5f       	subi	r22, 0xFF	; 255
 4e0:	7f 4f       	sbci	r23, 0xFF	; 255
 4e2:	8f 4f       	sbci	r24, 0xFF	; 255
 4e4:	9f 4f       	sbci	r25, 0xFF	; 255
 4e6:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000482 <__fp_split3>:
 482:	57 fd       	sbrc	r21, 7
 484:	90 58       	subi	r25, 0x80	; 128
 486:	44 0f       	add	r20, r20
 488:	55 1f       	adc	r21, r21
 48a:	59 f0       	breq	.+22     	; 0x4a2 <__fp_splitA+0x10>
 48c:	5f 3f       	cpi	r21, 0xFF	; 255
 48e:	71 f0       	breq	.+28     	; 0x4ac <__fp_splitA+0x1a>
 490:	47 95       	ror	r20

00000492 <__fp_splitA>:
 492:	88 0f       	add	r24, r24
 494:	97 fb       	bst	r25, 7
 496:	99 1f       	adc	r25, r25
 498:	61 f0       	breq	.+24     	; 0x4b2 <__fp_splitA+0x20>
 49a:	9f 3f       	cpi	r25, 0xFF	; 255
 49c:	79 f0       	breq	.+30     	; 0x4bc <__fp_splitA+0x2a>
 49e:	87 95       	ror	r24
 4a0:	08 95       	ret
 4a2:	12 16       	cp	r1, r18
 4a4:	13 06       	cpc	r1, r19
 4a6:	14 06       	cpc	r1, r20
 4a8:	55 1f       	adc	r21, r21
 4aa:	f2 cf       	rjmp	.-28     	; 0x490 <__fp_split3+0xe>
 4ac:	46 95       	lsr	r20
 4ae:	f1 df       	rcall	.-30     	; 0x492 <__fp_splitA>
 4b0:	08 c0       	rjmp	.+16     	; 0x4c2 <__fp_splitA+0x30>
 4b2:	16 16       	cp	r1, r22
 4b4:	17 06       	cpc	r1, r23
 4b6:	18 06       	cpc	r1, r24
 4b8:	99 1f       	adc	r25, r25
 4ba:	f1 cf       	rjmp	.-30     	; 0x49e <__fp_splitA+0xc>
 4bc:	86 95       	lsr	r24
 4be:	71 05       	cpc	r23, r1
 4c0:	61 05       	cpc	r22, r1
 4c2:	08 94       	sec
 4c4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000512 <__fp_zero>:
 512:	e8 94       	clt

00000514 <__fp_szero>:
 514:	bb 27       	eor	r27, r27
 516:	66 27       	eor	r22, r22
 518:	77 27       	eor	r23, r23
 51a:	cb 01       	movw	r24, r22
 51c:	97 f9       	bld	r25, 7
 51e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000536 <__gesf2>:
 536:	0e 94 1d 02 	call	0x43a	; 0x43a <__fp_cmp>
 53a:	08 f4       	brcc	.+2      	; 0x53e <__gesf2+0x8>
 53c:	8f ef       	ldi	r24, 0xFF	; 255
 53e:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000540 <__mulsf3>:
 540:	0e 94 57 00 	call	0xae	; 0xae <__data_load_end>
 544:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

000000ae <__mulsf3x>:
  ae:	0f c0       	rjmp	.+30     	; 0xce <__mulsf3x+0x20>
  b0:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscA>
  b4:	38 f0       	brcs	.+14     	; 0xc4 <__mulsf3x+0x16>
  b6:	0e 94 82 02 	call	0x504	; 0x504 <__fp_pscB>
  ba:	20 f0       	brcs	.+8      	; 0xc4 <__mulsf3x+0x16>
  bc:	95 23       	and	r25, r21
  be:	11 f0       	breq	.+4      	; 0xc4 <__mulsf3x+0x16>
  c0:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_inf>
  c4:	0c 94 a4 02 	jmp	0x548	; 0x548 <__fp_nan>
  c8:	11 24       	eor	r1, r1
  ca:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>
  ce:	0e 94 41 02 	call	0x482	; 0x482 <__fp_split3>
  d2:	70 f3       	brcs	.-36     	; 0xb0 <__mulsf3x+0x2>

000000d4 <__mulsf3_pse>:
  d4:	95 9f       	mul	r25, r21
  d6:	c1 f3       	breq	.-16     	; 0xc8 <__mulsf3x+0x1a>
  d8:	95 0f       	add	r25, r21
  da:	50 e0       	ldi	r21, 0x00	; 0
  dc:	55 1f       	adc	r21, r21
  de:	62 9f       	mul	r22, r18
  e0:	f0 01       	movw	r30, r0
  e2:	72 9f       	mul	r23, r18
  e4:	bb 27       	eor	r27, r27
  e6:	f0 0d       	add	r31, r0
  e8:	b1 1d       	adc	r27, r1
  ea:	63 9f       	mul	r22, r19
  ec:	aa 27       	eor	r26, r26
  ee:	f0 0d       	add	r31, r0
  f0:	b1 1d       	adc	r27, r1
  f2:	aa 1f       	adc	r26, r26
  f4:	64 9f       	mul	r22, r20
  f6:	66 27       	eor	r22, r22
  f8:	b0 0d       	add	r27, r0
  fa:	a1 1d       	adc	r26, r1
  fc:	66 1f       	adc	r22, r22
  fe:	82 9f       	mul	r24, r18
 100:	22 27       	eor	r18, r18
 102:	b0 0d       	add	r27, r0
 104:	a1 1d       	adc	r26, r1
 106:	62 1f       	adc	r22, r18
 108:	73 9f       	mul	r23, r19
 10a:	b0 0d       	add	r27, r0
 10c:	a1 1d       	adc	r26, r1
 10e:	62 1f       	adc	r22, r18
 110:	83 9f       	mul	r24, r19
 112:	a0 0d       	add	r26, r0
 114:	61 1d       	adc	r22, r1
 116:	22 1f       	adc	r18, r18
 118:	74 9f       	mul	r23, r20
 11a:	33 27       	eor	r19, r19
 11c:	a0 0d       	add	r26, r0
 11e:	61 1d       	adc	r22, r1
 120:	23 1f       	adc	r18, r19
 122:	84 9f       	mul	r24, r20
 124:	60 0d       	add	r22, r0
 126:	21 1d       	adc	r18, r1
 128:	82 2f       	mov	r24, r18
 12a:	76 2f       	mov	r23, r22
 12c:	6a 2f       	mov	r22, r26
 12e:	11 24       	eor	r1, r1
 130:	9f 57       	subi	r25, 0x7F	; 127
 132:	50 40       	sbci	r21, 0x00	; 0
 134:	9a f0       	brmi	.+38     	; 0x15c <__mulsf3_pse+0x88>
 136:	f1 f0       	breq	.+60     	; 0x174 <__mulsf3_pse+0xa0>
 138:	88 23       	and	r24, r24
 13a:	4a f0       	brmi	.+18     	; 0x14e <__mulsf3_pse+0x7a>
 13c:	ee 0f       	add	r30, r30
 13e:	ff 1f       	adc	r31, r31
 140:	bb 1f       	adc	r27, r27
 142:	66 1f       	adc	r22, r22
 144:	77 1f       	adc	r23, r23
 146:	88 1f       	adc	r24, r24
 148:	91 50       	subi	r25, 0x01	; 1
 14a:	50 40       	sbci	r21, 0x00	; 0
 14c:	a9 f7       	brne	.-22     	; 0x138 <__mulsf3_pse+0x64>
 14e:	9e 3f       	cpi	r25, 0xFE	; 254
 150:	51 05       	cpc	r21, r1
 152:	80 f0       	brcs	.+32     	; 0x174 <__mulsf3_pse+0xa0>
 154:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_inf>
 158:	0c 94 8a 02 	jmp	0x514	; 0x514 <__fp_szero>
 15c:	5f 3f       	cpi	r21, 0xFF	; 255
 15e:	e4 f3       	brlt	.-8      	; 0x158 <__mulsf3_pse+0x84>
 160:	98 3e       	cpi	r25, 0xE8	; 232
 162:	d4 f3       	brlt	.-12     	; 0x158 <__mulsf3_pse+0x84>
 164:	86 95       	lsr	r24
 166:	77 95       	ror	r23
 168:	67 95       	ror	r22
 16a:	b7 95       	ror	r27
 16c:	f7 95       	ror	r31
 16e:	e7 95       	ror	r30
 170:	9f 5f       	subi	r25, 0xFF	; 255
 172:	c1 f7       	brne	.-16     	; 0x164 <__mulsf3_pse+0x90>
 174:	fe 2b       	or	r31, r30
 176:	88 0f       	add	r24, r24
 178:	91 1d       	adc	r25, r1
 17a:	96 95       	lsr	r25
 17c:	87 95       	ror	r24
 17e:	97 f9       	bld	r25, 7
 180:	08 95       	ret
